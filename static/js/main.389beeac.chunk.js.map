{"version":3,"sources":["components/layout/Navbar.js","components/users/UserItem.js","components/layout/spinner.gif","components/layout/Spinner.js","components/users/Users.js","components/users/Search.js","App.js","index.js"],"names":["Navbar","icon","title","className","defaultProps","UserItem","user","avatar_url","login","html_url","src","alt","style","width","href","Spinner","spinner","margin","display","userStyle","gridTemplateColumns","gridGap","Users","users","loading","map","id","Search","state","text","onSubmit","event","preventDefault","props","searchUsers","setState","onChange","target","name","value","this","showClear","clearUsers","type","placeholder","onClick","Component","App","a","axios","get","process","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","res","data","items","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAGMA,G,MAAS,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACnB,OACI,qBAAKC,UAAU,oBAAf,SACI,+BAEI,mBAAGA,UAAWF,IAAQC,SAItCF,EAAOI,aAAe,CAClBF,MAAO,iBACPD,KAAM,iBAOKD,QCIAK,EAtBE,SAAC,GAA2C,IAAD,IAAzCC,KAAOC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAGzC,OACI,sBAAKN,UAAU,mBAAf,UAEI,qBAAKO,IAAKH,EAAYI,IAAI,gBAAgBR,UAAU,YAAYS,MAAO,CAACC,MAAO,UAE/E,6BAAKL,IACL,8BAEI,mBAAGM,KAAML,EAAUN,UAAU,2BAA7B,6BCdD,MAA0B,oCCQ1BY,EALC,kBACZ,cAAC,WAAD,UACI,qBAAKL,IAAKM,EAASL,IAAI,aAAaC,MAAO,CAACC,MAAO,QAASI,OAAQ,OAAQC,QAAS,cCiBvFC,EAAY,CACdD,QAAS,OACTE,oBAAqB,iBACrBC,QAAS,QAGEC,EAvBD,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MACZ,OADgC,EAAbC,QAER,cAAC,EAAD,IAEC,qBAAKZ,MAAOO,EAAZ,SACHI,EAAME,KAAI,SAAAnB,GAAI,OACP,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKoB,U,QCsCzBC,E,4MA7CXC,MAAQ,CACJC,KAAM,I,EASVC,SAAW,SAACC,GACRA,EAAMC,iBACN,EAAKC,MAAMC,YAAY,EAAKN,MAAMC,MAClC,EAAKM,SAAS,CAACN,KAAM,M,EAEzBO,SAAW,SAACL,GAAD,OAAW,EAAKI,SAAL,eAAgBJ,EAAMM,OAAOC,KAAOP,EAAMM,OAAOE,S,uDAK7D,IAAD,EACiCC,KAAKP,MAApCQ,EADF,EACEA,UAAWC,EADb,EACaA,WAAYb,EADzB,EACyBA,KAC9B,OACI,gCACI,uBAAMC,SAAUU,KAAKV,SAAU3B,UAAU,OAAzC,UACI,uBACIwC,KAAK,OACLL,KAAK,OACLM,YAAY,kBACZL,MAAOV,EACPO,SAAUI,KAAKJ,WAEnB,uBACIO,KAAK,SACLJ,MAAM,SACNpC,UAAU,8BAEjBsC,GACD,wBAAQtC,UAAU,0BAA0B0C,QAASH,EAArD,0B,GAvCKI,a,iBCyCNC,E,4MAlCXnB,MAAQ,CACJL,MAAO,GACPC,SAAS,G,EAUbU,Y,uCAAc,WAAOL,GAAP,eAAAmB,EAAA,sEACQC,IAAMC,IAAN,gDAAmDrB,EAAnD,sBAAqEsB,iJAAYC,2BAAjF,0BAA6HD,iJAAYE,iCADjJ,OACJC,EADI,OAEV,EAAKnB,SAAS,CAACZ,MAAO+B,EAAIC,KAAKC,MAAOhC,SAAS,IAFrC,2C,wDAIdkB,WAAa,kBAAM,EAAKP,SAAS,CAACZ,MAAO,GAAIC,SAAS,K,uDAE5C,IAAD,EACoBgB,KAAKZ,MAAvBL,EADF,EACEA,MAAOC,EADT,EACSA,QACd,OACI,sBAAKrB,UAAU,MAAf,UAGI,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACI,cAAC,EAAD,CAAQ+B,YAAaM,KAAKN,YAAaQ,WAAYF,KAAKE,WAAYD,UAAWlB,EAAMkC,OAAS,IAC9F,cAAC,EAAD,CAAOjC,QAASA,EAASD,MAAOA,c,GA5BlCuB,aCLlBY,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.389beeac.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Navbar = ({icon, title}) => {\n    return (\n        <div className='navbar bg-primary'>\n            <h1>\n                {/*uses props to render icon and title*/}\n                <i className={icon}/>{title}</h1>\n        </div>\n    );/*end of return*/\n};/*end of class*/\nNavbar.defaultProps = {\n    title: ' Github Finder',\n    icon: 'fab fa-github',\n};\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n};\n\nexport default Navbar;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst UserItem = ({user: {avatar_url, login, html_url}}) => {\n\n    /*destructure this.state to save entering each time*/\n    return (\n        <div className='card text-center'>\n            {/*updates avatar_url state with github user avatar*/}\n            <img src={avatar_url} alt=\"github avatar\" className='round-img' style={{width: '60px'}}/>\n            {/*updates login state with github username*/}\n            <h3>{login}</h3>\n            <div>\n                {/*update html_url state with github user link*/}\n                <a href={html_url} className='btn btn-dark btn-sm my-1'>More Info</a>\n            </div>\n        </div>\n\n    );/*end of return*/\n\n};/*end of class*/\nUserItem.propTypes = {\n    user: PropTypes.object.isRequired\n}\n\nexport default UserItem;","export default __webpack_public_path__ + \"static/media/spinner.a57bb540.gif\";","import React, {Fragment} from 'react';\nimport spinner from './spinner.gif';\n\nconst Spinner = () =>\n    <Fragment>\n        <img src={spinner} alt='loading...' style={{width: '200px', margin: 'auto', display: 'block'}}/>\n    </Fragment>\n\nexport default Spinner","import React from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\n\nconst Users = ({users, loading}) => {\n    if (loading) {\n        return <Spinner/>\n    } else {\n        return (<div style={userStyle}>\n            {users.map(user => (\n                    <UserItem key={user.id} user={user}/>\n                )\n            )}\n        </div>);\n    }\n}\nUsers.propTypes = {\n    users: PropTypes.array.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n/*styling function*/\nconst userStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridGap: '1rem'\n};\n\nexport default Users;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Search extends Component {\n    state = {\n        text: '',\n    }\n\n    static propTypes = {\n        searchUsers: PropTypes.func.isRequired,\n        clearUsers: PropTypes.func.isRequired,\n        showClear: PropTypes.bool.isRequired\n    };\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.props.searchUsers(this.state.text);\n        this.setState({text: ''});\n    };\n    onChange = (event) => this.setState({[event.target.name]: event.target.value});\n\n    /*clears users from state*/\n\n\n    render() {\n        const {showClear, clearUsers, text} = this.props;\n        return (\n            <div>\n                <form onSubmit={this.onSubmit} className='form'>\n                    <input\n                        type='text'\n                        name='text'\n                        placeholder='Search Users...'\n                        value={text}\n                        onChange={this.onChange}\n                    />\n                    <input\n                        type='submit'\n                        value='Search'\n                        className='btn btn-dark btn-block'/>\n                </form>\n                {showClear &&\n                <button className='btn-btn-light btn-block' onClick={clearUsers}>Clear</button>}\n\n            </div>\n        );\n    }\n}\n\nexport default Search;","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport Search from './components/users/Search';\n\n\nimport axios from 'axios';\n\nclass App extends Component {\n    state = {\n        users: [],\n        loading: false,\n    }\n\n    /* async componentDidMount() {\n         this.setState({loading: true});\n         const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n         this.setState({users: res.data, loading: false});\n     }*/\n\n    /*search github users*/\n    searchUsers = async (text) => {\n        const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n        this.setState({users: res.data.items, loading: false});\n    }\n    clearUsers = () => this.setState({users: [], loading: false});\n\n    render() {\n        const {users, loading} = this.state;\n        return (\n            <div className='App'>\n\n                {/*render Navbar class props*/}\n                <Navbar/>\n                <div className=\"container\">\n                    <Search searchUsers={this.searchUsers} clearUsers={this.clearUsers} showClear={users.length > 0}/>\n                    <Users loading={loading} users={users}/>\n                </div>\n            </div>\n        );\n    }/*end of render*/\n}/*end of class*/\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}